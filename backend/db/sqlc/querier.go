// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0

package db

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	AcceptGameInvitation(ctx context.Context, arg AcceptGameInvitationParams) error
	AddCardToPlayerHand(ctx context.Context, arg AddCardToPlayerHandParams) error
	AddPlayerToGame(ctx context.Context, arg AddPlayerToGameParams) error
	// Check if a player has reached the winning condition
	CheckWinCondition(ctx context.Context, arg CheckWinConditionParams) (CheckWinConditionRow, error)
	CreateGame(ctx context.Context, createdBy int64) (Game, error)
	CreateGameInvitation(ctx context.Context, arg CreateGameInvitationParams) error
	CreateSession(ctx context.Context, arg CreateSessionParams) (Session, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	// Declare the winner of the game
	DeclareWinner(ctx context.Context, gameID int64) (int64, error)
	DeleteGameInvitation(ctx context.Context, arg DeleteGameInvitationParams) error
	DeleteUser(ctx context.Context, id int64) error
	DoesInvitationExist(ctx context.Context, arg DoesInvitationExistParams) (bool, error)
	EndGame(ctx context.Context, gameID int64) error
	// Get card by ID
	GetCardByID(ctx context.Context, cardID int64) (Card, error)
	GetDessertIDByName(ctx context.Context, name string) (int64, error)
	GetDessertsPlayedByPlayer(ctx context.Context, playerGameID int64) ([]int64, error)
	GetGameByID(ctx context.Context, gameID int64) (Game, error)
	GetPlayedCards(ctx context.Context, playerGameID int64) ([]PlayedCard, error)
	GetPlayerGame(ctx context.Context, playerGameID int64) (PlayerGame, error)
	GetPlayerHand(ctx context.Context, playerGameID int64) ([]GetPlayerHandRow, error)
	GetSession(ctx context.Context, id uuid.UUID) (Session, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserByID(ctx context.Context, id int64) (User, error)
	GetUserByUsername(ctx context.Context, username string) (User, error)
	IsUserGameCreator(ctx context.Context, arg IsUserGameCreatorParams) (bool, error)
	ListActiveGames(ctx context.Context, arg ListActiveGamesParams) ([]Game, error)
	// List all cards
	ListCards(ctx context.Context) ([]Card, error)
	// List cards by type
	ListCardsByType(ctx context.Context, type_ string) ([]Card, error)
	ListGameInvitationsForUser(ctx context.Context, inviteeUsername string) ([]GameInvitation, error)
	ListGamePlayers(ctx context.Context, arg ListGamePlayersParams) ([]PlayerGame, error)
	ListPlayerGames(ctx context.Context, playerID int64) ([]PlayerGame, error)
	ListUsers(ctx context.Context, arg ListUsersParams) ([]User, error)
	RecordDessertPlayed(ctx context.Context, arg RecordDessertPlayedParams) error
	RecordPlayedCard(ctx context.Context, arg RecordPlayedCardParams) error
	RemoveCardFromPlayerHand(ctx context.Context, arg RemoveCardFromPlayerHandParams) error
	StartGame(ctx context.Context, gameID int64) error
	UpdateGameStatus(ctx context.Context, arg UpdateGameStatusParams) error
	UpdatePlayerGame(ctx context.Context, arg UpdatePlayerGameParams) error
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
}

var _ Querier = (*Queries)(nil)
